const axios = require("axios");
const User = require("../models/User");

exports.getDailyTip = async (req, res) => {
  try {
    const user = await User.findByPk(req.user.id, {
      attributes: ["name", "gender", "occupation"],
    });

    const systemPrompt = `
–¢–∏ ‚Äî –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç, —è–∫–∏–π —â–æ–¥–Ω—è –º–æ—Ç–∏–≤—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ—á–∞—Ç–∏ –¥–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ.

–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:
- –Ü–º‚Äô—è: ${user.name || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}
- –°—Ç–∞—Ç—å: ${user.gender || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}
- –†—ñ–¥ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ: ${user.occupation || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}

üìå –ó–∞–≤–¥–∞–Ω–Ω—è: –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫—É –ø–æ—Ä–∞–¥—É (1-2 —Ä–µ—á–µ–Ω–Ω—è), —è–∫ –Ω–∞–π–∫—Ä–∞—â–µ —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –¥–µ–Ω—å –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
- ‚Äú–û–ª–µ–∫—Å–∞–Ω–¥—Ä–µ, –ø–æ—á–Ω–∏ –¥–µ–Ω—å —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∏—Ö –∑–∞–¥–∞—á. –°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä—É–π—Å—è –Ω–∞ –Ω–∞–≤—á–∞–Ω–Ω—ñ.‚Äù
- ‚Äú–ü–∞–Ω—ñ –û–∫—Å–∞–Ω–æ, 30 —Ö–≤–∏–ª–∏–Ω —Ç–∏—à—ñ –∑ –∫–∞–≤–æ—é –¥–æ–ø–æ–º–æ–∂—É—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏—Å—å –Ω–∞ —Ä–æ–±–æ—á–∏–π —Ä–∏—Ç–º.‚Äù

üì¶ –§–æ—Ä–º–∞—Ç:
{ "tip": "–¢–≤–æ—è –ø–æ—Ä–∞–¥–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é" }
    `.trim();

    const response = await axios.post(
      "https://api.openai.com/v1/chat/completions",
      {
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: systemPrompt,
          },
        ],
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.AI_API_KEY}`,
          "Content-Type": "application/json",
        },
      }
    );

    const content = response.data.choices[0].message.content;
    const parsed = JSON.parse(content);

    res.json(parsed);
  } catch (err) {
    console.error("‚ùå AI Tip Error:", err?.response?.data || err.message);
    res.status(500).json({ error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ä–∞–¥—É –≤—ñ–¥ –®–Ü" });
  }
};
