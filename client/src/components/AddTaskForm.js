import React, { useState } from "react";
import axios from "axios";
import { toast } from "react-toastify";
import { getAuthHeaders } from "../utils/authHeaders";

const AddTaskForm = ({ onTaskAdded }) => {
  const [form, setForm] = useState({
    title: "",
    description: "",
    deadline: "",
    priority: "low",
    status: "not_started",
    category: "",
  });
  const [error, setError] = useState("");

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!form.title.trim()) {
      setError("–ù–∞–∑–≤–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∞");
      return;
    }

    if (form.title.length > 100) {
      setError("–ù–∞–∑–≤–∞ –Ω–µ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –±—ñ–ª—å—à–µ 100 —Å–∏–º–≤–æ–ª—ñ–≤");
      return;
    }

    setError("");

    const preparedForm = {
      ...form,
      deadline: form.deadline ? new Date(form.deadline).toISOString() : null,
    };

    try {
      const response = await axios.post(
        "http://localhost:5000/api/tasks",
        preparedForm,
        { headers: getAuthHeaders() }
      );

      onTaskAdded(response.data);
      toast.success("‚úÖ –ó–∞–¥–∞—á—É –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"); // üü¢ –û—Å—å —Ç—É—Ç

      setForm({
        title: "",
        description: "",
        deadline: "",
        priority: "low",
        status: "not_started",
        category: "",
      });
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ:", err);
      setError("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–¥–∞—á—É");
    }
    
  };

  return (
    <form onSubmit={handleSubmit} className="mb-4 p-4 bg-light border rounded">
      <h4 className="mb-3">–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞–¥–∞—á—É</h4>

      {error && (
        <div className="alert alert-danger text-center" role="alert">
          {error}
        </div>
      )}

      <div className="mb-3">
        <label className="form-label">–ù–∞–∑–≤–∞</label>
        <input
          type="text"
          name="title"
          className="form-control"
          placeholder="–ù–∞–ø—Ä. –ö—É–ø–∏—Ç–∏ –º–æ–ª–æ–∫–æ"
          value={form.title}
          onChange={handleChange}
          required
        />
      </div>

      <div className="mb-3">
        <label className="form-label">–û–ø–∏—Å</label>
        <input
          type="text"
          name="description"
          className="form-control"
          placeholder="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å"
          value={form.description}
          onChange={handleChange}
        />
      </div>

      <div className="mb-3">
        <label className="form-label">–î–µ–¥–ª–∞–π–Ω</label>
        <input
          type="date"
          name="deadline"
          className="form-control"
          value={form.deadline}
          onChange={handleChange}
        />
      </div>

      <div className="mb-3">
        <label className="form-label">–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç</label>
        <select
          name="priority"
          className="form-select"
          value={form.priority}
          onChange={handleChange}
        >
          <option value="low">–ù–∏–∑—å–∫–∏–π</option>
          <option value="medium">–°–µ—Ä–µ–¥–Ω—ñ–π</option>
          <option value="high">–í–∏—Å–æ–∫–∏–π</option>
        </select>
      </div>

      <div className="mb-3">
        <label className="form-label">–°—Ç–∞—Ç—É—Å</label>
        <select
          name="status"
          className="form-select"
          value={form.status}
          onChange={handleChange}
        >
          <option value="not_started">–û—á—ñ–∫—É—î</option>
          <option value="in_progress">–£ –ø—Ä–æ—Ü–µ—Å—ñ</option>
          <option value="done">–í–∏–∫–æ–Ω–∞–Ω–æ</option>
        </select>
      </div>

      <div className="mb-4">
        <label className="form-label">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
        <input
          type="text"
          name="category"
          className="form-control"
          placeholder="–ù–∞–ø—Ä. –†–æ–±–æ—Ç–∞, –ù–∞–≤—á–∞–Ω–Ω—è"
          value={form.category}
          onChange={handleChange}
        />
      </div>

      <button type="submit" className="btn btn-success w-100">
        –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–¥–∞—á—É
      </button>
    </form>
  );
};

export default AddTaskForm;
